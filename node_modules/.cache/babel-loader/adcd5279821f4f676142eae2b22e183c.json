{"ast":null,"code":"var _jsxFileName = \"/Users/dbindra/Downloads/ramp-fe-challenge/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const {\n    data: employees,\n    fetchAll: fetchAllEmployees,\n    loading: employeesLoading\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    fetchAll: fetchPaginatedTransactions,\n    invalidateData: invalidatePaginatedTransactions,\n    loading: paginatedTransactionsLoading\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    fetchById: fetchTransactionsByEmployee,\n    invalidateData: invalidateTransactionsByEmployee\n  } = useTransactionsByEmployee();\n  const [isLoading, setIsLoading] = useState(false);\n  const transactions = useMemo(() => {\n    var _ref, _paginatedTransaction;\n\n    return (_ref = (_paginatedTransaction = paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) !== null && _paginatedTransaction !== void 0 ? _paginatedTransaction : transactionsByEmployee) !== null && _ref !== void 0 ? _ref : null;\n  }, [paginatedTransactions, transactionsByEmployee]);\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true);\n    invalidateTransactionsByEmployee();\n    await fetchAllEmployees();\n    await fetchPaginatedTransactions();\n    setIsLoading(false);\n  }, [fetchAllEmployees, fetchPaginatedTransactions, invalidateTransactionsByEmployee]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    invalidatePaginatedTransactions();\n    await fetchTransactionsByEmployee(employeeId);\n  }, [invalidatePaginatedTransactions, fetchTransactionsByEmployee]);\n  useEffect(() => {\n    if (employees === null && !employeesLoading) {\n      loadAllTransactions();\n    }\n  }, [employees, employeesLoading, loadAllTransactions]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        isLoading: isLoading,\n        defaultValue: EMPTY_EMPLOYEE,\n        items: employees === null ? [] : [EMPTY_EMPLOYEE, ...employees],\n        label: \"Filter by employee\",\n        loadingLabel: \"Loading employees\",\n        parseItem: item => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`\n        }),\n        onChange: async newValue => {\n          if (newValue !== null) {\n            await loadTransactionsByEmployee(newValue.id);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampGrid\",\n        children: [/*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), transactions && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          disabled: paginatedTransactionsLoading,\n          onClick: loadAllTransactions,\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"p4neldD1NK8r/D8Unc1G+SeVtk0=\", false, function () {\n  return [useEmployees, usePaginatedTransactions, useTransactionsByEmployee];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useMemo","useState","InputSelect","Instructions","Transactions","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","EMPTY_EMPLOYEE","App","data","employees","fetchAll","fetchAllEmployees","loading","employeesLoading","paginatedTransactions","fetchPaginatedTransactions","invalidateData","invalidatePaginatedTransactions","paginatedTransactionsLoading","transactionsByEmployee","fetchById","fetchTransactionsByEmployee","invalidateTransactionsByEmployee","isLoading","setIsLoading","transactions","loadAllTransactions","loadTransactionsByEmployee","employeeId","item","value","id","label","firstName","lastName","newValue"],"sources":["/Users/dbindra/Downloads/ramp-fe-challenge/src/App.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport { Employee } from \"./utils/types\";\n\nexport function App() {\n  const { data: employees, fetchAll: fetchAllEmployees, loading: employeesLoading } = useEmployees();\n  const { data: paginatedTransactions, fetchAll: fetchPaginatedTransactions, invalidateData: invalidatePaginatedTransactions, loading: paginatedTransactionsLoading } = usePaginatedTransactions();\n  const { data: transactionsByEmployee, fetchById: fetchTransactionsByEmployee, invalidateData: invalidateTransactionsByEmployee } = useTransactionsByEmployee();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const transactions = useMemo(() => paginatedTransactions?.data ?? transactionsByEmployee ?? null, [paginatedTransactions, transactionsByEmployee]);\n\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true);\n    invalidateTransactionsByEmployee();\n    \n    await fetchAllEmployees();\n    await fetchPaginatedTransactions();\n    \n    setIsLoading(false);\n  }, [fetchAllEmployees, fetchPaginatedTransactions, invalidateTransactionsByEmployee]);\n\n  const loadTransactionsByEmployee = useCallback(async (employeeId: string) => {\n    invalidatePaginatedTransactions();\n    await fetchTransactionsByEmployee(employeeId);\n  }, [invalidatePaginatedTransactions, fetchTransactionsByEmployee]);\n\n  useEffect(() => {\n    if (employees === null && !employeesLoading) {\n      loadAllTransactions();\n    }\n  }, [employees, employeesLoading, loadAllTransactions]);\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={isLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={async (newValue) => {\n            if (newValue !== null) {\n              await loadTransactionsByEmployee(newValue.id);\n            }\n          }}\n        />\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          <Transactions transactions={transactions} />\n\n          {transactions && (\n            <button\n              className=\"RampButton\"\n              disabled={paginatedTransactionsLoading}\n              onClick={loadAllTransactions}\n            >\n              View More\n            </button>\n          )}\n        </div>\n      </main>\n    </Fragment>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}